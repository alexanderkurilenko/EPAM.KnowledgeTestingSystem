@model WebUI.ViewModels.TestViewModel
<div class="panel panel-info">
    <div class="panel-heading">Edit Test</div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <br />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Creator, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Creator, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Creator, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div id="question-template" class="panel panel-success">
                    @for (int i = 0; i < Model.Questions.Count; i++)
                {
                        <div class="panel-heading">
                            @Html.LabelFor(model => model.Questions[i].Text)
                        </div>
                        <br />



                        <div class="panel-body question-body">
                            <div class="col-md-12 form-group center-form-group">
                                @Html.HiddenFor(m => m.Questions[i].Id)
                                @Html.HiddenFor(m => m.Questions[i].TestId)
                                @Html.EditorFor(model => Model.Questions[i].Text, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => Model.Questions[i].Text, "", new { @class = "text-danger" })
                            </div>
                            @for (int j = 0; j < Model.Questions[i].Answers.Count; j++)
                            {
                                <div class="col-md-12 form-group center-form-group">
                                    @Html.HiddenFor(m => m.Questions[i].Answers[j].Id)
                                    @Html.HiddenFor(m => m.Questions[i].Answers[j].QuestionId)

                                    @Html.LabelFor(model => model.Questions[i].Answers[j].Text, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.Questions[i].Answers[j].Text, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Questions[i].Answers[j].Text, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.Questions[i].Answers[j].IsCorrect, new { htmlAttributes = new { @class = "pull-right" } })

                                        @Html.EditorFor(model => model.Questions[i].Answers[j].IsCorrect, new { htmlAttributes = new { @class = "pull-right" } })
                                        @Html.ValidationMessageFor(model => model.Questions[i].Answers[j].IsCorrect, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            }
                        </div>

                    }
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>